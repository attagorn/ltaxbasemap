# -*- coding: utf-8 -*-
"""
/***************************************************************************
 LTaxBasemap
                                 A QGIS plugin
 Base map for qgis3
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                              -------------------
        begin                : 2021-05-19
        git sha              : $Format:%H$
        copyright            : (C) 2021 by Attagorn Srinarong / LTMAP
        email                : attagorn@gmail.com
 ***************************************************************************/

"""
from qgis.PyQt.QtCore import QSettings, QTranslator, QCoreApplication, Qt
from qgis.PyQt.QtGui import QIcon
from qgis.PyQt.QtWidgets import QAction
# Initialize Qt resources from file resources.py
from .resources import *

# Import the code for the DockWidget
from .ltax_basemap_dockwidget import LTaxBasemapDockWidget
import os.path

from qgis.core import *
from qgis.gui import *
from qgis.utils import *

class LTaxBasemap:
    """QGIS Plugin Implementation."""

    def __init__(self, iface):

        # Save reference to the QGIS interface
        self.iface = iface

        # initialize plugin directory
        self.plugin_dir = os.path.dirname(__file__)

        # initialize locale
        locale = QSettings().value('locale/userLocale')[0:2]
        locale_path = os.path.join(
            self.plugin_dir,
            'i18n',
            'LTaxBasemap_{}.qm'.format(locale))

        if os.path.exists(locale_path):
            self.translator = QTranslator()
            self.translator.load(locale_path)
            QCoreApplication.installTranslator(self.translator)


        self.actions = []
        self.menu = self.tr(u'&LTax Base Map')

        self.toolbar = self.iface.addToolBar(u'LTaxBasemap')
        self.toolbar.setObjectName(u'LTaxBasemap')


        self.pluginIsActive = False
        self.dockwidget = None

    def tr(self, message):

        return QCoreApplication.translate('LTaxBasemap', message)


    def add_action(
        self,
        icon_path,
        text,
        callback,
        enabled_flag=True,
        add_to_menu=True,
        add_to_toolbar=True,
        status_tip=None,
        whats_this=None,
        parent=None):
 
        icon = QIcon(icon_path)
        action = QAction(icon, text, parent)
        action.triggered.connect(callback)
        action.setEnabled(enabled_flag)

        if status_tip is not None:
            action.setStatusTip(status_tip)

        if whats_this is not None:
            action.setWhatsThis(whats_this)

        if add_to_toolbar:
            self.toolbar.addAction(action)

        if add_to_menu:
            self.iface.addPluginToMenu(
                self.menu,
                action)

        self.actions.append(action)

        return action


    def initGui(self):
        """Create the menu entries and toolbar icons inside the QGIS GUI."""

        icon_path = ':/plugins/ltax_basemap/icons/icon.png'
        self.add_action(
            icon_path,
            text=self.tr(u'LTax Basemap'),
            callback=self.run,
            parent=self.iface.mainWindow())

    #--------------------------------------------------------------------------

    def onClosePlugin(self):

        self.dockwidget.closingPlugin.disconnect(self.onClosePlugin)
        self.pluginIsActive = False


    def unload(self):

        for action in self.actions:
            self.iface.removePluginMenu(
                self.tr(u'&LTax Base Map'),
                action)
            self.iface.removeToolBarIcon(action)

        del self.toolbar

    #--------------------------------------------------------------------------

    def run(self):
        """Run method that loads and starts the plugin"""

        if not self.pluginIsActive:
            self.pluginIsActive = True
            if self.dockwidget == None:

                self.dockwidget = LTaxBasemapDockWidget()

            self.dockwidget.closingPlugin.connect(self.onClosePlugin)
            self.dockwidget.btnLoad.clicked.connect(self.loadmap)

            self.iface.addDockWidget(Qt.LeftDockWidgetArea, self.dockwidget)
            self.dockwidget.show()

    def loadmap(self):
        maps = []
        maps.append([u'Open Street Map','https://b.tile.openstreetmap.org/%7Bz%7D/%7Bx%7D/%7By%7D.png','xyz'])
        maps.append([u'Google Terrian','https://mt1.google.com/vt/lyrs%3Dp%2Ctraffic%26z%3D%7Bz%7D%26x%3D%7Bx%7D%26y%3D%7By%7D%26hl%3Dth','xyz'])
        maps.append([u'Google Satellite Map','https://mt1.google.com/vt/lyrs%3Ds%26x%3D%7Bx%7D%26y%3D%7By%7D%26z%3D%7Bz%7D&hl=th','xyz'])
        maps.append([u'Google Hybrid Map','https://mt1.google.com/vt/lyrs%3Dy%26x%3D%7Bx%7D%26y%3D%7By%7D%26z%3D%7Bz%7D&hl=th','xyz'])
        maps.append([u'ESRI Topo Map','https://services.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/tile/%7Bz%7D/%7By%7D/%7Bx%7D','xyz'])
        maps.append([u'ESRI Satellite Map','https://services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/%7Bz%7D/%7By%7D/%7Bx%7D','xyz'])
        maps.append([u'RTSD L7018S','CRS=CRS:84&dpiMode=7&format=image/png&layers=0&styles=&url=https://geoportal.rtsd.mi.th/arcgis/services/Raster/L7018S_Service/ImageServer/WMSServer?','wms'])
        maps.append([u'ภาพถ่ายดาวเทียม 2560-2562(GSD=2m.)','https://gistdaportal.gistda.or.th/data/rest/services/L02_base/mo_Thailand_GISTDA_2m/ImageServer/WMTS/tile/1.0.0/L02_base_mo_Thailand_GISTDA_2m/default/default028mm/%7Bz%7D/%7By%7D/%7Bx%7D','xyz'])
        maps.append([u'รูปแปลงที่ดิน โฉนด','crs=EPSG:24047&dpiMode=7&format=image/png&layers=MV_SPARCEL&styles&url=http://110.164.49.72:8081/geoserver/WMSDOL/wms?','wms'])
        maps.append([u'รูปแปลง ส.ป.ก.4-01 (1)','service=WMS&format=image/png&layers=parcel3_spk&crs=EPSG:24047&styles=&url=http://www.thaisarabun.com:8080/geoserver/ltax/ows?','wms'])
        maps.append([u'รูปแปลง ส.ป.ก.4-01 (2)',"crs='EPSG:3857' format='PNG32' layer='0' url='https://lddonfarm.ldd.go.th/arcgis/rest/services/LDDFarm/ALRO/MapServer' table='' sql=''",'arcgis'])
        maps.append([u'รูปแปลง ราชพัสดุ 1','service=WMS&request=GetMap&layers=geonode%3Al03005_royalland_ttd_4k_y2004&styles=&format=image%2Fpng&url=https://fgds-backend.ngis.go.th/geoserver/ows?','wms'])
        maps.append([u'รูปแปลง ราชพัสดุ 2','service=WMS&request=GetMap&layers=geonode%3Al03005_royalland_ttd_25k_y2017_kmitl&styles=&format=image%2Fpng&url=https://fgds-backend.ngis.go.th/geoserver/ows?','wms'])
        maps.append([u'รูปแปลง นิคมสหกรณ์','service=WMS&request=GetMap&layers=geonode%3Al03007_allocateparcel_cpd_5k_y2004_kmitl&styles=&format=image%2Fpng&url=https://fgds-backend.ngis.go.th/geoserver/ows?','wms'])
        maps.append([u'รูปแปลง นิคมสร้างตนเอง','service=WMS&request=GetMap&layers=geonode%3Al03007_allocateparcel_dsdw_xxk_yxxxx_kmitl&styles=&format=image%2Fpng&url=https://fgds-backend.ngis.go.th/geoserver/ows?','wms'])

        smap = self.dockwidget.comboBox.currentText()
        print(smap)
        for amap in maps:
            if smap == amap[0]:
                print(amap[0], amap[1])
                if amap[2] == 'xyz':
                    self.create_xyz(amap[1], amap[0])
                elif amap[2] == 'wms':
                    self.create_wms(amap[1], amap[0])
                elif amap[2] == 'arcgis':
                    self.create_arcgis(amap[1], amap[0])
                return

    def create_xyz(self, url_path, map_name):

        rlayer = QgsRasterLayer('type=xyz&url='+url_path+'&zmax=19&zmin=0',map_name,'wms')
        if rlayer.isValid():

            QgsProject.instance().addMapLayer(rlayer)
        else:
            print(u'โหลด wms' + map_name + ' ไม่ได้!!!')

    def create_wms(self, url_path, map_name):
        #crs=EPSG:24047&dpiMode=4&format=image/png&layers=parcel3_spk&style=&url=http://www.thaisarabun.com:8080/geoserver/ltax/wms?
        rlayer = QgsRasterLayer(url_path, map_name, 'wms')
        if rlayer.isValid():
            QgsProject.instance().addMapLayer(rlayer)
        else:
            print(u'โหลด ' + map_name + ' ไม่ได้!!!')

    def create_arcgis(self, url_path, map_name):
        #crs=EPSG:24047&dpiMode=4&format=image/png&layers=parcel3_spk&style=&url=http://www.thaisarabun.com:8080/geoserver/ltax/wms?
        rlayer = QgsRasterLayer(url_path, map_name, 'arcgismapserver')
        if rlayer.isValid():
            QgsProject.instance().addMapLayer(rlayer)
        else:
            print(u'โหลด ' + map_name + ' ไม่ได้!!!')